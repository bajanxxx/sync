<div class="container theme-showcase" role="main">
  <div class="page-header">
    <h2>Add a project <small>(tell us a little about what have you been working on <code><%= consultant.first_name + ' ' + consultant.last_name %></code>)</small></h2>
  </div>
  <div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8">
      <div class="panel panel-primary">
        <div class="panel-heading">
          <h3 class="panel-title">Project Details</h3>
        </div>
        <div class="panel-body">
          <form role="form" id="primary" method="post" action="/consultant/<%= consultant.email %>/projects/add" enctype="multipart/form-data">
            <!-- projects -->
            <div class="projects">
              <div id="parentprojectwrapper">
                <div id="projectwrapper">
                  <fieldset class="well-white well the-fieldset">
                    <legend class="the-legend">
                      <strong>Project Information</strong>
                    </legend>
                    <!-- title -->
                    <div class="form-group">
                      <label class="control-label" for="jobtitle">Job Title</label>
                      <div class="">
                        <input id="jobtitle" name="jobtitle" class="form-control" placeholder="title at the company" type="text">
                      </div>
                    </div>
                    <!-- client -->
                    <div class="form-group">
                      <label class="control-label" for="client">Client</label>
                      <div class="">
                        <input id="client" name="client" class="form-control" placeholder="name of the client" type="text">
                      </div>
                    </div>
                    <!-- project name -->
                    <div class="form-group">
                      <label class="control-label" for="name">Name of the project</label>
                      <div class="">
                        <input id="name" name="name" class="form-control" placeholder="a unique name for your project, this will be used later to retrieve/edit the project info" type="text">
                      </div>
                    </div>
                    <!-- Software Used -->
                    <div class="form-group">
                      <label class="control-label" for="softwareused">Software(s) Used</label>
                      <div class="">
                        <input id="softwareused" name="softwareused" class="form-control select2" multiple data-placeholder="softwares used" style="width:100%">
                      </div>
                    </div>
                    <!-- Management Tools Used -->
                    <div class="form-group">
                      <label class="control-label" for="managementtoolsused">Management Tools Used</label>
                      <div class="">
                        <input id="managementtoolsused" name="managementtoolsused" class="form-control select2" multiple data-placeholder="management tools used" style="width:100%">
                      </div>
                    </div>
                    <!-- Commercial Used -->
                    <div class="form-group">
                      <label class="control-label" for="commercialsupport">Commercial Support Used</label>
                      <div class="">
                        <input id="commercialsupport" name="commercialsupport" class="form-control select2" multiple data-placeholder="commercials support used" style="width:100%">
                      </div>
                    </div>
                    <!-- point of contact -->
                    <div class="form-group">
                      <label class="control-label" for="pointofcontact">Point of contact</label>
                      <div class="">
                        <input id="pointofcontact" name="pointofcontact" class="form-control select2" multiple data-placeholder="list of persons who were your point of contact from vendor" style="width:100%">
                      </div>
                    </div>
                    <!-- illustration upload -->
                    <!-- TODO NOTE: detail design diagram -->
                    <div class="form-group">
                      <label class="control-label">Illustration Upload</label>
                      <div class="">
                        <input type="file" id="illustrations" class="form-control" name="illustrations[]" title="Select illustrations related to project" data-filename-placement="inside" multiple/>
                      </div>
                    </div>
                    <!-- TODO NOTE requirement, design, supporting documents -->
                    <!-- documents upload -->
                    <div class="form-group">
                      <label class="control-label">Documents Upload</label>
                      <div class="">
                        <input type="file" id="docuemnts" class="form-control" name="documents[]" title="Select documents related to project" data-filename-placement="inside" multiple/>
                      </div>
                    </div>

                    <div id="usecasewrapper">
                      <% 5.times do |usecaseindex| %>
                      <% if usecaseindex == 0 %>
                      <div id="usecase<%= usecaseindex %>">
                      <% else %>
                      <div id="usecase<%= usecaseindex %>" style="display:none;">
                      <% end %>
                        <fieldset class="well">
                          <legend class="the-legend">
                            <strong>Specify Project's Usecase</strong>
                            <% unless usecaseindex == 0 %>
                            <a href="#" id="removeusecase<%= usecaseindex %>" class="btn btn-danger btn-xs pull-right"><span class="glyphicon glyphicon-remove"></span></a>
                            <% end %>
                          </legend>
                          <!-- use case unique name -->
                          <div class="form-group">
                            <label class="control-label" for="uc<%= usecaseindex %>name">Usecase Name</label>
                            <div class="">
                              <input id="uc<%= usecaseindex %>name" name="uc<%= usecaseindex %>name" class="form-control" placeholder="Give a unique name to the usecase with in the project so that you could refer to it later.">
                            </div>
                          </div>
                          <!-- use case description -->
                          <div class="form-group">
                            <label class="control-label" for="uc<%= usecaseindex %>description">Usecase Description</label>
                            <div class="">
                              <textarea id="uc<%= usecaseindex %>description" name="uc<%= usecaseindex %>description" class="form-control" placeholder="What is the client business purpose for this technology/solution.  How is the technology/solution being used by the client"></textarea>
                            </div>
                          </div>
                          <!-- requirements wrapper -->
                          <div id="uc<%= usecaseindex %>requirementwrapper">
                            <% 5.times do |requirementindex| %>
                            <% if requirementindex == 0 %>
                            <div id="uc<%= usecaseindex %>requirement<%= requirementindex %>">
                            <% else %>
                            <div id="uc<%= usecaseindex %>requirement<%= requirementindex %>" style="display:none;">
                            <% end %>
                              <fieldset class="well-white well the-fieldset">
                                <legend class="the-legend">
                                  <strong>Usecase Requirements</strong>
                                  <% unless requirementindex == 0 %>
                                  <a href="#" id="uc<%= usecaseindex %>removerequirement<%= requirementindex %>" class="btn btn-danger btn-xs pull-right"><span class="glyphicon glyphicon-remove"></span></a>
                                  <% end %>
                                </legend>
                                <!-- requirement -->
                                <div class="form-group">
                                  <label class="control-label" for="uc<%= usecaseindex %>requirementdesc<%= requirementindex %>">Requirement</label>
                                  <div class="">
                                    <textarea id="uc<%= usecaseindex %>requirementdesc<%= requirementindex %>" name="uc<%= usecaseindex %>requirementdesc<%= requirementindex %>" class="form-control" placeholder="Specify the requiment in the usecase that you were trying to solve"></textarea>
                                  </div>
                                </div>
                                <!-- approach -->
                                <div class="form-group">
                                  <label class="control-label" for="uc<%= usecaseindex %>approch<%= requirementindex %>">Approach</label>
                                  <div class="">
                                    <textarea id="uc<%= usecaseindex %>approch<%= requirementindex %>" name="uc<%= usecaseindex %>approch<%= requirementindex %>" class="form-control" placeholder="How I delivered the requirement"></textarea>
                                  </div>
                                </div>
                                <!-- effort -->
                                <div class="form-group">
                                  <label class="control-label" for="uc<%= usecaseindex %>effort<%= requirementindex %>">My Effort (hours)</label>
                                  <div class="">
                                    <textarea id="uc<%= usecaseindex %>effort<%= requirementindex %>" name="uc<%= usecaseindex %>effort<%= requirementindex %>" class="form-control" placeholder="How much time it took (me)"></textarea>
                                  </div>
                                </div>
                                <!-- team effort -->
                                <div class="form-group">
                                  <label class="control-label" for="uc<%= usecaseindex %>teameffort<%= requirementindex %>">Team Effort (hours)</label>
                                  <div class="">
                                    <textarea id="uc<%= usecaseindex %>teameffort<%= requirementindex %>" name="uc<%= usecaseindex %>teameffort<%= requirementindex %>" class="form-control" placeholder="Additional team members hours"></textarea>
                                  </div>
                                </div>
                                <!-- resources -->
                                <div class="form-group">
                                  <label class="control-label" for="uc<%= usecaseindex %>resources<%= requirementindex %>">Solution Resources</label>
                                  <div class="">
                                    <textarea id="uc<%= usecaseindex %>resources<%= requirementindex %>" name="uc<%= usecaseindex %>resources<%= requirementindex %>" class="form-control" placeholder="Where did you got information and help (if any)."></textarea>
                                  </div>
                                </div>
                                <!-- tools -->
                                <div class="form-group">
                                  <label class="control-label" for="uc<%= usecaseindex %>tools<%= requirementindex %>">Tools</label>
                                  <div class="">
                                    <input id="uc<%= usecaseindex %>tools<%= requirementindex %>" name="uc<%= usecaseindex %>tools<%= requirementindex %>" class="form-control select2" multiple data-placeholder="What kind of tools have you used" style="width:100%">
                                  </div>
                                </div>
                                <!-- insights -->
                                <div class="form-group">
                                  <label class="control-label" for="uc<%= usecaseindex %>insights<%= requirementindex %>">Insights &amp;  Issues</label>
                                  <div class="">
                                    <textarea id="uc<%= usecaseindex %>insights<%= requirementindex %>" name="uc<%= usecaseindex %>insights<%= requirementindex %>" class="form-control" placeholder="Issues and Insights into solving the problem (lessons you have learned)."></textarea>
                                  </div>
                                </div>
                                <!-- solution benefits -->
                                <div class="form-group">
                                  <label class="control-label" for="uc<%= usecaseindex %>benefits<%= requirementindex %>">Solution Benefits / Outcomes</label>
                                  <div class="">
                                    <textarea id="uc<%= usecaseindex %>benefits<%= requirementindex %>" name="uc<%= usecaseindex %>benefits<%= requirementindex %>" class="form-control" placeholder="What was the benefit/outcome from solving this requirement"></textarea>
                                  </div>
                                </div>
                              </fieldset> <!-- requirement wrapper fieldset -->
                            </div> <!-- requirement <%= requirementindex %> end -->
                            <% unless requirementindex == 0 %>
                            <button type="button" id="uc<%= usecaseindex %>addrequirement<%= requirementindex %>" class="btn btn-default btn-xs">Add requirement <%= requirementindex + 1 %></button>
                            <% end %>
                            <script type="text/javascript">
                              $("#uc<%= usecaseindex %>tools<%= requirementindex %>").select2({tags:["hive", "pig", "sqoop", "oozie", "flume", "mapreduce"]});
                              $('#uc<%= usecaseindex %>addrequirement<%= requirementindex %>').on("click", function(){
                                document.getElementById("uc<%= usecaseindex %>requirement<%= requirementindex %>").style.display="inline";
                                document.getElementById("uc<%= usecaseindex %>addrequirement<%= requirementindex %>").style.display="none";
                                return false;
                              });
                              $('#uc<%= usecaseindex %>removerequirement<%= requirementindex %>').on("click", function() {
                                document.getElementById("uc<%= usecaseindex %>requirement<%= requirementindex %>").style.display="none";
                                document.getElementById("uc<%= usecaseindex %>addrequirement<%= requirementindex %>").style.display="inline";
                                return false;
                              });
                            </script>
                            <% end %>
                          </div> <!-- end requirement wrapper -->
                        </fieldset> <!-- project usecase fieldset end -->
                      </div>
                      <% unless usecaseindex == 0 %>
                      <button type="button" id="addusecase<%= usecaseindex %>" class="btn btn-default btn-xs">Add usecase <%= usecaseindex + 1 %></button>
                      <% end %>
                      <script type="text/javascript">
                        $("#uc<%= usecaseindex %>name").tooltip({'trigger':'focus', 'title': 'Usecase name should be unique and cannot be changed later'});
                        $('#addusecase<%= usecaseindex %>').on("click", function(){
                          document.getElementById("usecase<%= usecaseindex %>").style.display="inline";
                          document.getElementById("addusecase<%= usecaseindex %>").style.display="none";
                          return false;
                        });
                        $('#removeusecase<%= usecaseindex %>').on("click", function() {
                          document.getElementById("usecase<%= usecaseindex %>").style.display="none";
                          document.getElementById("addusecase<%= usecaseindex %>").style.display="inline";
                          return false;
                        });
                      </script>
                      <% end %>
                    </div>
                  </fieldset> <!-- end projectwrapper fieldset -->
                </div>
                <!-- <label class="control-field"> -->
                <script type="text/javascript">
                  $("#softwareused").select2({tags:["hadoop", "hbase", "cassandra", "mongodb", "spark", "kafka", "storm"]});
                  $("#managementtoolsused").select2({tags:["cm", "ambari", "puppet", "chef", "ansible", "salt", "nagios", "ganglia", "zabbix", "logstash", "splunk"]});
                  $("#commercialsupport").select2({tags:["Cloudera", "HortonWorks", "DataStax", "MapR", "10Gen", "ElasticSearch", "DataBricks"]});
                  $("#pointofcontact").select2({tags:[]});
                </script>
              </fieldset> <!-- end project fieldset -->
            </div> <!-- end project wrapper -->
            <!-- captcha -->
            <fieldset class="well the-fieldset">
              <legend class="the-legend"><strong><span class="text-primary">Are you human ?</span></strong></legend>
              <div class="form-group">
                <!-- <label class="control-label" id="captchaOperation"></label> -->
                <div class="">
                  <input id="captcha" name="captcha" class="form-control" placeholder="" type="text">
                </div>
              </div>

              <div class="form-group">
                <div class="row-fluid">
                  <div class="span3"></div>
                  <div class="span6 text-center">
                    <button type="submit" class="btn btn-primary" id="SubmitBtn">Submit form</button>
                    <button type="button" class="btn btn-primary" id="validateBtn">Manual validate</button>
                    <button type="button" class="btn btn-warning" id="resetBtn">Reset form</button>
                  </div>
                  <div class="span3"></div>
                </div>
                <p id="CreateProjectRequest" class="text-center"></p>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
    <div class="col-md-2"></div>
  </div>
</div>

<style type="text/css">
#primary .form-control-feedback {
    /* To make the feedback icon visible */
    z-index: 100;
}
</style>

<script src="/js/bootstrap.file-input.js"></script>
<script type="text/javascript">
$(document).ready(function() {
  // make sure we are the top of the page on reload
  $(this).scrollTop(0);

  // enable bootstrap file input for all input type's of file
  $('input[type=file]').bootstrapFileInput();
  $('.file-inputs').bootstrapFileInput();

  $('#name').tooltip({'trigger':'focus', 'title': 'Project name should be unique and cannot be changed later'});

  // Generate a simple captcha
  function randomNumber(min, max) {
      return Math.floor(Math.random() * (max - min + 1) + min);
  };
  var captchaFirst = randomNumber(1, 100);
  var captchaSecond = randomNumber(1, 200);
  $('#captcha').attr('placeholder', "How much is " + [captchaFirst, '+', captchaSecond].join(' '));
  // $('#captchaOperation').html([randomNumber(1, 100), '+', randomNumber(1, 200), '='].join(' '));

  $('#primary')
    .find('[name="certifications"]')
      .select2({
        data:[
              { text: 'Cloudera Certified Professional: Data Scientist', id:  'ccpds' },
              { text: 'Cloudera Certified Developer for Apache Hadoop', id:  'ccdh' },
              { text: 'Cloudera Certified Administrator for Apache Hadoop', id: 'ccah' },
              { text: 'Cloudera Certified Specialist in Apache HBase', id: 'ccshb' },
              { text: 'HortonWorks Certified Apache Hadoop Java Develper', id: 'hcjd' },
              { text: 'HortonWorks Certified Apache Hadoop Develper', id: 'hchd' },
              { text: 'HortonWorks Certified Apache Hadoop Admin', id: 'hcha' },
              { text: 'DataStasx Certified Cassandra 1.2 Developer', id: 'dsccd' },
              { text: 'MongoDB Certified DBA Associate', id: 'c100dba' },
              { text: 'MongoDB Certified Developer Associate', id: 'c100dev' }
          ],
          multiple: true
      })
      // Revalidate the certifications when it is changed
      .change(function(e) {
        $('#primary').bootstrapValidator('revalidateField', 'certifications');
      })
      .end()
    .find('[name="trainings"]')
      .select2({
        tags: ['Mongodb Developer', 'Mongodb Admin']
      })
      .change(function(e) {
        $('#primary').bootstrapValidator('revalidateField', 'trainings');
      })
      .end()
    .find('[name="softwareused"]')
      .change(function(e){
        $('#primary').bootstrapValidator('revalidateField', 'softwareused');
      })
      .end()
    .find('[name="managementtoolsused"]')
      .change(function(e){
        $('#primary').bootstrapValidator('revalidateField', 'managementtoolsused');
      })
      .end()
    .find('[name="uc0tools0"]')
      .change(function(e){
        $('#primary').bootstrapValidator('revalidateField', 'uc0tools0');
      })
      .end()
    .find('[name="commercialsupport"]')
      .change(function(e){
        $('#primary').bootstrapValidator('revalidateField', 'commercialsupport');
      })
      .end()
    .bootstrapValidator({
      feedbackIcons: {
        valid: 'glyphicon glyphicon-ok',
        invalid: 'glyphicon glyphicon-remove',
        validating: 'glyphicon glyphicon-refresh'
      },
      fields: {
        consultantname: {
          message: 'The name is not valid',
          validators: {
            notEmpty: {
                message: 'The name is required and cannot be empty'
            },
            stringLength: {
                min: 6,
                max: 30,
                message: 'The name must be more than 6 and less than 30 characters long'
            },
          }
        },
        email: {
          message: 'The email is not valid',
          validators: {
            notEmpty: {
                message: 'The email is required and cannot be empty'
            },
            stringLength: {
                min: 6,
                max: 30,
                message: 'The email must be more than 6 and less than 30 characters long'
            },
            regexp: {
                regexp: /^[a-zA-Z0-9_.-]+$/,
                message: 'The email can only consist of alphabetical, number, period, underscore and hyphen'
            },
          }
        },
        currentcompany: {
          message: 'The name of the company is not valid',
          validators: {
            notEmpty: {
                message: 'The name of the company is required and cannot be empty'
            },
            stringLength: {
                min: 6,
                max: 30,
                message: 'The name of the company must be more than 6 and less than 30 characters long'
            }
          }
        },
        // qualifications
        certifications: {
          validators: {
            callback: {
              message: 'Please choose atleast 1 certification you have completed',
              callback: function(value, validator) {
                // Get the selected options
                var options = validator.getFieldElements('certifications').val();
                return (options !== null && options.split(',').length >= 1 && options.split(',').length <= 10);
              }
            }
          }
        },
        trainings: {
          validators: {
            notEmpty: {
              message: 'Enter atleast 1 training that you have completed'
            },
            callback: {
              message: 'Please choose atleast 1 training you have completed',
              callback: function(value, validator) {
                var options = validator.getFieldElements('trainings').val(),
                    options2 = options.split(',');
                return (options2 !== null && options2.length >= 1 && options2.length <= 10);
              }
            }
          }
        },
        // project 0 fields
        jobtitle: {
          message: 'Enter a job title for project',
          validators: {
            notEmpty: {
              message: 'The name of the job title is required and cannot be empty'
            },
            stringLength: {
                min: 5,
                max: 30,
                message: 'The name of the job title must be should be between 5 and 30 characters long'
            }
          }
        },
        client: {
          message: 'Enter a client name for project',
          validators: {
            notEmpty: {
              message: 'The name of the client is required and cannot be empty'
            },
            stringLength: {
                min: 5,
                max: 30,
                message: 'The name of the client should be between 5 and 30 characters long'
            }
          }
        },
        name: {
          message: 'Enter a name for project',
          validators: {
            notEmpty: {
              message: 'The name of the project is required and cannot be empty'
            },
            stringLength: {
                min: 5,
                max: 30,
                message: 'The name of the project should be between 5 and 30 characters long'
            },
            regexp: {
                regexp: /^[a-zA-Z0-9_.-:]+$/,
                message: 'Name of the project can only consist of alphabetical, number, period, underscore and hyphen'
            }
          }
        },
        softwareused: {
          validators: {
            callback: {
              message: 'Please choose atleast 2 software technologies you have used in the project',
              callback: function(value, validator) {
                var options = validator.getFieldElements('softwareused').val(),
                    options2 = options.split(',');
                return (options2 !== null && options2.length >= 2 && options2.length <= 10);
              }
            }
          }
        },
        managementtoolsused: {
          validators: {
            notEmpty: {
              message: 'Enter atleast 1 management tool that have used in the usecase'
            },
            callback: {
              message: 'Please choose atleast 1 management tools you have used in the project',
              callback: function(value, validator) {
                var options = validator.getFieldElements('managementtoolsused').val(),
                    options2 = options.split(',');
                return (options2 !== null && options2.length >= 1 && options2.length <= 10);
              }
            }
          }
        },
        commercialsupport: {
          validators: {
            notEmpty: {
              message: 'Enter atleast 1 commercial support that have used in the usecase'
            },
            callback: {
              message: 'Please choose atleast 1 commercial support you have used in the project',
              callback: function(value, validator) {
                var options = validator.getFieldElements('commercialsupport').val(),
                    options2 = options.split(',');
                return (options2 !== null && options2.length >= 1 && options2.length <= 10);
              }
            }
          }
        },
        uc0name: {
          message: 'Enter a name for the usecase',
          validators: {
            notEmpty: {
              message: 'Usecase name for the project cannot be empty, usecase name should be unique with in a project'
            },
            stringLength: {
                min: 5,
                max: 25,
                message: 'Usecase name should be between 5 and 25 characters long'
            },
            regexp: {
                regexp: /^[a-zA-Z0-9_.-:]+$/,
                message: 'Name of the project can only consist of alphabetical, number, period, underscore and hyphen'
            }
          }
        },
        uc0description: {
          message: 'Enter a description for the usecase',
          validators: {
            notEmpty: {
              message: 'Usecase description for the project cannot be empty'
            },
            stringLength: {
                min: 25,
                max: 10000,
                message: 'Usecase description should be between 3 and 10000 characters long'
            }
          }
        },
        uc0requirementdesc0: {
          //message: 'Enter a description for the requirement',
          validators: {
            notEmpty: {
              message: 'Usecase requirement description for the project cannot be empty'
            },
            stringLength: {
                min: 25,
                max: 10000,
                message: 'Usecase requirement description should be between 3 and 10000 characters long'
            }
          }
        },
        uc0approch0: {
          //message: 'Enter a description for the requirement',
          validators: {
            notEmpty: {
              message: 'Usecase requiremnt approch for the project cannot be empty'
            },
            stringLength: {
                min: 25,
                max: 10000,
                message: 'Usecase requiremnt approch should be between 25 and 10000 characters long'
            }
          }
        },
        uc0effort0: {
          //message: 'Enter a description for the requirement',
          validators: {
            notEmpty: {
              message: 'Usecase requiremnt effort for the project cannot be empty'
            },
            stringLength: {
                min: 2,
                max: 1000,
                message: 'Usecase requiremnt effort should be between 2 and 1000 characters long'
            }
          }
        },
        uc0teameffort0: {
          validators: {
            notEmpty: {
              message: 'Usecase requiremnt team effort for the project cannot be empty'
            },
            stringLength: {
                min: 1,
                max: 1000,
                message: 'Usecase requiremnt team effort should be between 1 and 1000 characters long, put 0 for none'
            }
          }
        },
        uc0resources0: {
          //message: 'Enter a description for the requirement',
          validators: {
            notEmpty: {
              message: 'Usecase requiremnt resources for the project cannot be empty'
            },
            stringLength: {
                min: 25,
                max: 10000,
                message: 'Usecase requiremnt resources should be between 25 and 10000 characters long'
            }
          }
        },
        uc0insights0: {
          //message: 'Enter a description for the requirement',
          validators: {
            notEmpty: {
              message: 'Usecase requiremnt insights for the project cannot be empty'
            },
            stringLength: {
                min: 25,
                max: 10000,
                message: 'Usecase requiremnt insights should be between 25 and 10000 characters long'
            }
          }
        },
        uc0tools0: {
          validators: {
            callback: {
              message: 'Please choose atleast 2 tools you have used in the project',
              callback: function(value, validator) {
                var options = validator.getFieldElements('uc0tools0').val(),
                    options2 = options.split(',');
                return (options2 !== null && options2.length >= 2 && options2.length <= 10);
              }
            }
          }
        },
        captcha: {
          validators: {
            callback: {
              message: 'Wrong answer',
              callback: function(value, validator) {
                var sum = captchaFirst + captchaSecond;
                return value == sum;
              }
            }
          }
        },
        'illustrations[]': {
          validators: {
            file: {
              extension: 'jpeg,png',
              type: 'image/jpeg,image/png',
              maxSize: 2048 * 1024,   // 2 MB
              message: 'Currently we only accept jpeg & png formats with size limit of 2MB'
            }
          }
        },
        'documents[]': {
          validators: {
            file: {
              extension: 'pdf',
              type: 'application/pdf',
              maxSize: 5120 * 1024,   // 5 MB
              message: 'Currently we only accept pdf files with size limit of 5MB'
            }
          }
        },
      } // end fields
    })
    // custom handling the submit
    .on('success.form.bv', function(e) {
      e.preventDefault(); // Prevent form submission

      // Get the form instance
      var $form = $(e.target);

      // var data = new FormData($form);

      // Get the BootstrapValidator instance
      var bv = $form.data('bootstrapValidator');

      // Use Ajax to submit form data
      $.ajax({
        type: "POST",
        url: $form.attr('action'),
        data: new FormData($form[0]), // make sure we send files as a part of data
        cache: false,
        contentType: false,
        processData: false,
        dataType:'json', // return type from server
        success: function(data) {
          if(!data.success) {
            console.log("Error: " + data.msg);
            $('#CreateProjectRequest').addClass('text-danger').html(data.msg);
          } else {
            console.log("Sucess: " + data.msg);
            $('#CreateProjectRequest').addClass('text-info').html(data.msg);
            location.href = "/consultant/<%= consultant.email %>/projects";
            // location.reload();
          }
        },
        error: function(data) {
          console.log("Error: " + data);
          $('#CreateProjectRequest').addClass('text-danger').html(data.msg);
        }
      });
    });

    // Validate the form manually
    $('#validateBtn').click(function() {
        $('#primary').bootstrapValidator('validate');
    });

    $('#resetBtn').click(function() {
        $('#primary').data('bootstrapValidator').resetForm(true);
    });
});

</script>
