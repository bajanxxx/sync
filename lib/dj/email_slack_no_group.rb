class EmailSlackNoGroup < Struct.new(:settings, :group_name)
  def perform
    email_body = <<EOBODY
      <p>Hi Admin(s),</p>
      <p>Please create this group #{group_name} in Slack at the earliest, there are notifications being generated to this group.</p>
      <br/>
      <p><em><strong>Note</strong>: This email is generated by cloudwick sync portal. If you have received this email by error please contact <a href="mailto:admin@cloudwick.com?Subject=Sync%20Misplaced%20Email">admin</a>.</em></p>
      <p>Thanks for using <strong>Cloudwick Sync.</strong></p>
EOBODY
    Pony.mail(
      from: 'Cloudwick Sync' + "<" + settings[:email] + ">",
      to: settings[:admin_group],
      subject: "Requires Slack Group #{group_name} to be created",
      headers: { 'Content-Type' => 'text/html' },
      body: email_body,
      via: :smtp,
      via_options: {
        address: settings[:smtp_address],
        port: settings[:smtp_port],
        enable_starttls_auto: true,
        user_name: settings[:email],
        password: settings[:password],
        authentication: :plain,
        domain: 'localhost.localdoamin'
      }
    )
  end

  def success
    log "successfully sent out status update email to #{settings[:admin_group]}"
  end

  def error
    log "something went wrong sending status update email out to #{settings[:admin_group]}"
  end

  def failure
    log "something went wrong sending status update email out"
  end

  # overrides the Delayed::Worker.max_attempts only for this job
  def max_attempts
    5
  end

  def log(text)
    Delayed::Worker.logger.info("#{Time.now.strftime('%FT%T%z')}: [#{self.class.name} (pid: #{Process.pid})] #{text}")
  end
end
